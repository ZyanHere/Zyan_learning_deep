{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":26737,"sourceType":"datasetVersion","datasetId":20710}],"dockerImageVersionId":30886,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.439708Z","iopub.execute_input":"2025-02-13T18:01:17.440016Z","iopub.status.idle":"2025-02-13T18:01:17.450113Z","shell.execute_reply.started":"2025-02-13T18:01:17.439995Z","shell.execute_reply":"2025-02-13T18:01:17.449346Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/bengaluru-house-price-data/Bengaluru_House_Data.csv\n","output_type":"stream"}],"execution_count":41},{"cell_type":"code","source":"data = pd.read_csv('/kaggle/input/bengaluru-house-price-data/Bengaluru_House_Data.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.451060Z","iopub.execute_input":"2025-02-13T18:01:17.451319Z","iopub.status.idle":"2025-02-13T18:01:17.485558Z","shell.execute_reply.started":"2025-02-13T18:01:17.451287Z","shell.execute_reply":"2025-02-13T18:01:17.484876Z"}},"outputs":[],"execution_count":42},{"cell_type":"code","source":"data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.486553Z","iopub.execute_input":"2025-02-13T18:01:17.486744Z","iopub.status.idle":"2025-02-13T18:01:17.497065Z","shell.execute_reply.started":"2025-02-13T18:01:17.486723Z","shell.execute_reply":"2025-02-13T18:01:17.496178Z"}},"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"              area_type   availability                  location       size  \\\n0  Super built-up  Area         19-Dec  Electronic City Phase II      2 BHK   \n1            Plot  Area  Ready To Move          Chikka Tirupathi  4 Bedroom   \n2        Built-up  Area  Ready To Move               Uttarahalli      3 BHK   \n3  Super built-up  Area  Ready To Move        Lingadheeranahalli      3 BHK   \n4  Super built-up  Area  Ready To Move                  Kothanur      2 BHK   \n\n   society total_sqft  bath  balcony   price  \n0  Coomee        1056   2.0      1.0   39.07  \n1  Theanmp       2600   5.0      3.0  120.00  \n2      NaN       1440   2.0      3.0   62.00  \n3  Soiewre       1521   3.0      1.0   95.00  \n4      NaN       1200   2.0      1.0   51.00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>area_type</th>\n      <th>availability</th>\n      <th>location</th>\n      <th>size</th>\n      <th>society</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>balcony</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Super built-up  Area</td>\n      <td>19-Dec</td>\n      <td>Electronic City Phase II</td>\n      <td>2 BHK</td>\n      <td>Coomee</td>\n      <td>1056</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>39.07</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Plot  Area</td>\n      <td>Ready To Move</td>\n      <td>Chikka Tirupathi</td>\n      <td>4 Bedroom</td>\n      <td>Theanmp</td>\n      <td>2600</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>120.00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Built-up  Area</td>\n      <td>Ready To Move</td>\n      <td>Uttarahalli</td>\n      <td>3 BHK</td>\n      <td>NaN</td>\n      <td>1440</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>62.00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Super built-up  Area</td>\n      <td>Ready To Move</td>\n      <td>Lingadheeranahalli</td>\n      <td>3 BHK</td>\n      <td>Soiewre</td>\n      <td>1521</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>95.00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Super built-up  Area</td>\n      <td>Ready To Move</td>\n      <td>Kothanur</td>\n      <td>2 BHK</td>\n      <td>NaN</td>\n      <td>1200</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>51.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":43},{"cell_type":"code","source":"data.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.498006Z","iopub.execute_input":"2025-02-13T18:01:17.498188Z","iopub.status.idle":"2025-02-13T18:01:17.515711Z","shell.execute_reply.started":"2025-02-13T18:01:17.498174Z","shell.execute_reply":"2025-02-13T18:01:17.514343Z"}},"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"(13320, 9)"},"metadata":{}}],"execution_count":44},{"cell_type":"code","source":"data.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.516703Z","iopub.execute_input":"2025-02-13T18:01:17.516965Z","iopub.status.idle":"2025-02-13T18:01:17.539077Z","shell.execute_reply.started":"2025-02-13T18:01:17.516945Z","shell.execute_reply":"2025-02-13T18:01:17.538106Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 13320 entries, 0 to 13319\nData columns (total 9 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   area_type     13320 non-null  object \n 1   availability  13320 non-null  object \n 2   location      13319 non-null  object \n 3   size          13304 non-null  object \n 4   society       7818 non-null   object \n 5   total_sqft    13320 non-null  object \n 6   bath          13247 non-null  float64\n 7   balcony       12711 non-null  float64\n 8   price         13320 non-null  float64\ndtypes: float64(3), object(6)\nmemory usage: 936.7+ KB\n","output_type":"stream"}],"execution_count":45},{"cell_type":"code","source":"for column in data.columns :\n    print(data[column].value_counts())\n    print(\"*\"*20)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.539768Z","iopub.execute_input":"2025-02-13T18:01:17.540005Z","iopub.status.idle":"2025-02-13T18:01:17.570300Z","shell.execute_reply.started":"2025-02-13T18:01:17.539985Z","shell.execute_reply":"2025-02-13T18:01:17.569088Z"}},"outputs":[{"name":"stdout","text":"area_type\nSuper built-up  Area    8790\nBuilt-up  Area          2418\nPlot  Area              2025\nCarpet  Area              87\nName: count, dtype: int64\n********************\navailability\nReady To Move    10581\n18-Dec             307\n18-May             295\n18-Apr             271\n18-Aug             200\n                 ...  \n15-Aug               1\n17-Jan               1\n16-Nov               1\n16-Jan               1\n14-Jul               1\nName: count, Length: 81, dtype: int64\n********************\nlocation\nWhitefield                        540\nSarjapur  Road                    399\nElectronic City                   302\nKanakpura Road                    273\nThanisandra                       234\n                                 ... \nBapuji Layout                       1\n1st Stage Radha Krishna Layout      1\nBEML Layout 5th stage               1\nsingapura paradise                  1\nAbshot Layout                       1\nName: count, Length: 1305, dtype: int64\n********************\nsize\n2 BHK         5199\n3 BHK         4310\n4 Bedroom      826\n4 BHK          591\n3 Bedroom      547\n1 BHK          538\n2 Bedroom      329\n5 Bedroom      297\n6 Bedroom      191\n1 Bedroom      105\n8 Bedroom       84\n7 Bedroom       83\n5 BHK           59\n9 Bedroom       46\n6 BHK           30\n7 BHK           17\n1 RK            13\n10 Bedroom      12\n9 BHK            8\n8 BHK            5\n11 BHK           2\n11 Bedroom       2\n10 BHK           2\n14 BHK           1\n13 BHK           1\n12 Bedroom       1\n27 BHK           1\n43 Bedroom       1\n16 BHK           1\n19 BHK           1\n18 Bedroom       1\nName: count, dtype: int64\n********************\nsociety\nGrrvaGr    80\nPrarePa    76\nSryalan    59\nPrtates    59\nGMown E    56\n           ..\nAmionce     1\nJaghtDe     1\nJauraht     1\nBrity U     1\nRSntsAp     1\nName: count, Length: 2688, dtype: int64\n********************\ntotal_sqft\n1200    843\n1100    221\n1500    205\n2400    196\n600     180\n       ... \n3580      1\n2461      1\n1437      1\n2155      1\n4689      1\nName: count, Length: 2117, dtype: int64\n********************\nbath\n2.0     6908\n3.0     3286\n4.0     1226\n1.0      788\n5.0      524\n6.0      273\n7.0      102\n8.0       64\n9.0       43\n10.0      13\n12.0       7\n13.0       3\n11.0       3\n16.0       2\n27.0       1\n40.0       1\n15.0       1\n14.0       1\n18.0       1\nName: count, dtype: int64\n********************\nbalcony\n2.0    5113\n1.0    4897\n3.0    1672\n0.0    1029\nName: count, dtype: int64\n********************\nprice\n75.00     310\n65.00     302\n55.00     275\n60.00     270\n45.00     240\n         ... \n351.00      1\n54.10       1\n80.64       1\n32.73       1\n488.00      1\nName: count, Length: 1994, dtype: int64\n********************\n","output_type":"stream"}],"execution_count":46},{"cell_type":"code","source":"data.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.572086Z","iopub.execute_input":"2025-02-13T18:01:17.572303Z","iopub.status.idle":"2025-02-13T18:01:17.580741Z","shell.execute_reply.started":"2025-02-13T18:01:17.572287Z","shell.execute_reply":"2025-02-13T18:01:17.580039Z"}},"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"area_type          0\navailability       0\nlocation           1\nsize              16\nsociety         5502\ntotal_sqft         0\nbath              73\nbalcony          609\nprice              0\ndtype: int64"},"metadata":{}}],"execution_count":47},{"cell_type":"code","source":"data.drop(columns=['area_type','availability','society','balcony'],inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.581595Z","iopub.execute_input":"2025-02-13T18:01:17.581774Z","iopub.status.idle":"2025-02-13T18:01:17.596763Z","shell.execute_reply.started":"2025-02-13T18:01:17.581759Z","shell.execute_reply":"2025-02-13T18:01:17.595960Z"}},"outputs":[],"execution_count":48},{"cell_type":"code","source":"data.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.597736Z","iopub.execute_input":"2025-02-13T18:01:17.598087Z","iopub.status.idle":"2025-02-13T18:01:17.620513Z","shell.execute_reply.started":"2025-02-13T18:01:17.598063Z","shell.execute_reply":"2025-02-13T18:01:17.619421Z"}},"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"               bath         price\ncount  13247.000000  13320.000000\nmean       2.692610    112.565627\nstd        1.341458    148.971674\nmin        1.000000      8.000000\n25%        2.000000     50.000000\n50%        2.000000     72.000000\n75%        3.000000    120.000000\nmax       40.000000   3600.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bath</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>13247.000000</td>\n      <td>13320.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2.692610</td>\n      <td>112.565627</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.341458</td>\n      <td>148.971674</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>8.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.000000</td>\n      <td>50.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2.000000</td>\n      <td>72.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>3.000000</td>\n      <td>120.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>40.000000</td>\n      <td>3600.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":49},{"cell_type":"code","source":"data['location'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.622191Z","iopub.execute_input":"2025-02-13T18:01:17.622430Z","iopub.status.idle":"2025-02-13T18:01:17.629650Z","shell.execute_reply.started":"2025-02-13T18:01:17.622409Z","shell.execute_reply":"2025-02-13T18:01:17.628872Z"}},"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"location\nWhitefield                        540\nSarjapur  Road                    399\nElectronic City                   302\nKanakpura Road                    273\nThanisandra                       234\n                                 ... \nBapuji Layout                       1\n1st Stage Radha Krishna Layout      1\nBEML Layout 5th stage               1\nsingapura paradise                  1\nAbshot Layout                       1\nName: count, Length: 1305, dtype: int64"},"metadata":{}}],"execution_count":50},{"cell_type":"code","source":"data['location'] = data['location'].fillna('Sarjapur Road')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.630748Z","iopub.execute_input":"2025-02-13T18:01:17.631024Z","iopub.status.idle":"2025-02-13T18:01:17.648613Z","shell.execute_reply.started":"2025-02-13T18:01:17.630998Z","shell.execute_reply":"2025-02-13T18:01:17.647733Z"}},"outputs":[],"execution_count":51},{"cell_type":"code","source":"data['size'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.649483Z","iopub.execute_input":"2025-02-13T18:01:17.649745Z","iopub.status.idle":"2025-02-13T18:01:17.665373Z","shell.execute_reply.started":"2025-02-13T18:01:17.649718Z","shell.execute_reply":"2025-02-13T18:01:17.664642Z"}},"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"size\n2 BHK         5199\n3 BHK         4310\n4 Bedroom      826\n4 BHK          591\n3 Bedroom      547\n1 BHK          538\n2 Bedroom      329\n5 Bedroom      297\n6 Bedroom      191\n1 Bedroom      105\n8 Bedroom       84\n7 Bedroom       83\n5 BHK           59\n9 Bedroom       46\n6 BHK           30\n7 BHK           17\n1 RK            13\n10 Bedroom      12\n9 BHK            8\n8 BHK            5\n11 BHK           2\n11 Bedroom       2\n10 BHK           2\n14 BHK           1\n13 BHK           1\n12 Bedroom       1\n27 BHK           1\n43 Bedroom       1\n16 BHK           1\n19 BHK           1\n18 Bedroom       1\nName: count, dtype: int64"},"metadata":{}}],"execution_count":52},{"cell_type":"code","source":"data['size'] = data['size'].fillna('2 BHK')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.665938Z","iopub.execute_input":"2025-02-13T18:01:17.666135Z","iopub.status.idle":"2025-02-13T18:01:17.681301Z","shell.execute_reply.started":"2025-02-13T18:01:17.666120Z","shell.execute_reply":"2025-02-13T18:01:17.680598Z"}},"outputs":[],"execution_count":53},{"cell_type":"code","source":"data['bath'] = data['bath'].fillna(data['bath'].median())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.682705Z","iopub.execute_input":"2025-02-13T18:01:17.682916Z","iopub.status.idle":"2025-02-13T18:01:17.696006Z","shell.execute_reply.started":"2025-02-13T18:01:17.682900Z","shell.execute_reply":"2025-02-13T18:01:17.695361Z"}},"outputs":[],"execution_count":54},{"cell_type":"code","source":"data.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.697237Z","iopub.execute_input":"2025-02-13T18:01:17.697438Z","iopub.status.idle":"2025-02-13T18:01:17.715164Z","shell.execute_reply.started":"2025-02-13T18:01:17.697423Z","shell.execute_reply":"2025-02-13T18:01:17.714482Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 13320 entries, 0 to 13319\nData columns (total 5 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   location    13320 non-null  object \n 1   size        13320 non-null  object \n 2   total_sqft  13320 non-null  object \n 3   bath        13320 non-null  float64\n 4   price       13320 non-null  float64\ndtypes: float64(2), object(3)\nmemory usage: 520.4+ KB\n","output_type":"stream"}],"execution_count":55},{"cell_type":"code","source":"data['bhk'] = data['size'].str.split().str.get(0).astype((int))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.715787Z","iopub.execute_input":"2025-02-13T18:01:17.716012Z","iopub.status.idle":"2025-02-13T18:01:17.738409Z","shell.execute_reply.started":"2025-02-13T18:01:17.715996Z","shell.execute_reply":"2025-02-13T18:01:17.737263Z"}},"outputs":[],"execution_count":56},{"cell_type":"code","source":"data[data.bhk>20]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.739277Z","iopub.execute_input":"2025-02-13T18:01:17.739510Z","iopub.status.idle":"2025-02-13T18:01:17.776188Z","shell.execute_reply.started":"2025-02-13T18:01:17.739492Z","shell.execute_reply":"2025-02-13T18:01:17.775335Z"}},"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"                       location        size total_sqft  bath  price  bhk\n1718  2Electronic City Phase II      27 BHK       8000  27.0  230.0   27\n4684                Munnekollal  43 Bedroom       2400  40.0  660.0   43","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>location</th>\n      <th>size</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>price</th>\n      <th>bhk</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1718</th>\n      <td>2Electronic City Phase II</td>\n      <td>27 BHK</td>\n      <td>8000</td>\n      <td>27.0</td>\n      <td>230.0</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>4684</th>\n      <td>Munnekollal</td>\n      <td>43 Bedroom</td>\n      <td>2400</td>\n      <td>40.0</td>\n      <td>660.0</td>\n      <td>43</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":57},{"cell_type":"code","source":"data['total_sqft'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.776719Z","iopub.execute_input":"2025-02-13T18:01:17.776932Z","iopub.status.idle":"2025-02-13T18:01:17.791217Z","shell.execute_reply.started":"2025-02-13T18:01:17.776916Z","shell.execute_reply":"2025-02-13T18:01:17.790279Z"}},"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"array(['1056', '2600', '1440', ..., '1133 - 1384', '774', '4689'],\n      dtype=object)"},"metadata":{}}],"execution_count":58},{"cell_type":"code","source":"def convertRange(x):\n    temp = x.split('-')\n    if len(temp) == 2:\n        return (float(temp[0]) + float(temp[1]))/2\n\n    try:\n        return float(x)\n    except:\n        return None","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.792046Z","iopub.execute_input":"2025-02-13T18:01:17.792256Z","iopub.status.idle":"2025-02-13T18:01:17.806497Z","shell.execute_reply.started":"2025-02-13T18:01:17.792240Z","shell.execute_reply":"2025-02-13T18:01:17.805762Z"}},"outputs":[],"execution_count":59},{"cell_type":"code","source":"data['total_sqft'] = data['total_sqft'].apply(convertRange)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.807243Z","iopub.execute_input":"2025-02-13T18:01:17.807431Z","iopub.status.idle":"2025-02-13T18:01:17.830313Z","shell.execute_reply.started":"2025-02-13T18:01:17.807416Z","shell.execute_reply":"2025-02-13T18:01:17.829231Z"}},"outputs":[],"execution_count":60},{"cell_type":"code","source":"data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.831314Z","iopub.execute_input":"2025-02-13T18:01:17.831668Z","iopub.status.idle":"2025-02-13T18:01:17.852998Z","shell.execute_reply.started":"2025-02-13T18:01:17.831640Z","shell.execute_reply":"2025-02-13T18:01:17.852106Z"}},"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"                   location       size  total_sqft  bath   price  bhk\n0  Electronic City Phase II      2 BHK      1056.0   2.0   39.07    2\n1          Chikka Tirupathi  4 Bedroom      2600.0   5.0  120.00    4\n2               Uttarahalli      3 BHK      1440.0   2.0   62.00    3\n3        Lingadheeranahalli      3 BHK      1521.0   3.0   95.00    3\n4                  Kothanur      2 BHK      1200.0   2.0   51.00    2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>location</th>\n      <th>size</th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>price</th>\n      <th>bhk</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Electronic City Phase II</td>\n      <td>2 BHK</td>\n      <td>1056.0</td>\n      <td>2.0</td>\n      <td>39.07</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Chikka Tirupathi</td>\n      <td>4 Bedroom</td>\n      <td>2600.0</td>\n      <td>5.0</td>\n      <td>120.00</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uttarahalli</td>\n      <td>3 BHK</td>\n      <td>1440.0</td>\n      <td>2.0</td>\n      <td>62.00</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Lingadheeranahalli</td>\n      <td>3 BHK</td>\n      <td>1521.0</td>\n      <td>3.0</td>\n      <td>95.00</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Kothanur</td>\n      <td>2 BHK</td>\n      <td>1200.0</td>\n      <td>2.0</td>\n      <td>51.00</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":61},{"cell_type":"markdown","source":"**Price per sq feet**","metadata":{}},{"cell_type":"code","source":"data['price_per_sqft'] = data['price']*100000 / data['total_sqft']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.853778Z","iopub.execute_input":"2025-02-13T18:01:17.854075Z","iopub.status.idle":"2025-02-13T18:01:17.868251Z","shell.execute_reply.started":"2025-02-13T18:01:17.854050Z","shell.execute_reply":"2025-02-13T18:01:17.867489Z"}},"outputs":[],"execution_count":62},{"cell_type":"code","source":"data['price_per_sqft']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.869163Z","iopub.execute_input":"2025-02-13T18:01:17.869439Z","iopub.status.idle":"2025-02-13T18:01:17.884489Z","shell.execute_reply.started":"2025-02-13T18:01:17.869417Z","shell.execute_reply":"2025-02-13T18:01:17.883817Z"}},"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"0         3699.810606\n1         4615.384615\n2         4305.555556\n3         6245.890861\n4         4250.000000\n             ...     \n13315     6689.834926\n13316    11111.111111\n13317     5258.545136\n13318    10407.336319\n13319     3090.909091\nName: price_per_sqft, Length: 13320, dtype: float64"},"metadata":{}}],"execution_count":63},{"cell_type":"code","source":"data.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.885204Z","iopub.execute_input":"2025-02-13T18:01:17.885473Z","iopub.status.idle":"2025-02-13T18:01:17.930287Z","shell.execute_reply.started":"2025-02-13T18:01:17.885450Z","shell.execute_reply":"2025-02-13T18:01:17.929513Z"}},"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"         total_sqft          bath         price           bhk  price_per_sqft\ncount  13274.000000  13320.000000  13320.000000  13320.000000    1.327400e+04\nmean    1559.626694      2.688814    112.565627      2.802778    7.907501e+03\nstd     1238.405258      1.338754    148.971674      1.294496    1.064296e+05\nmin        1.000000      1.000000      8.000000      1.000000    2.678298e+02\n25%     1100.000000      2.000000     50.000000      2.000000    4.266865e+03\n50%     1276.000000      2.000000     72.000000      3.000000    5.434306e+03\n75%     1680.000000      3.000000    120.000000      3.000000    7.311746e+03\nmax    52272.000000     40.000000   3600.000000     43.000000    1.200000e+07","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>price</th>\n      <th>bhk</th>\n      <th>price_per_sqft</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>13274.000000</td>\n      <td>13320.000000</td>\n      <td>13320.000000</td>\n      <td>13320.000000</td>\n      <td>1.327400e+04</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1559.626694</td>\n      <td>2.688814</td>\n      <td>112.565627</td>\n      <td>2.802778</td>\n      <td>7.907501e+03</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1238.405258</td>\n      <td>1.338754</td>\n      <td>148.971674</td>\n      <td>1.294496</td>\n      <td>1.064296e+05</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>8.000000</td>\n      <td>1.000000</td>\n      <td>2.678298e+02</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1100.000000</td>\n      <td>2.000000</td>\n      <td>50.000000</td>\n      <td>2.000000</td>\n      <td>4.266865e+03</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1276.000000</td>\n      <td>2.000000</td>\n      <td>72.000000</td>\n      <td>3.000000</td>\n      <td>5.434306e+03</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1680.000000</td>\n      <td>3.000000</td>\n      <td>120.000000</td>\n      <td>3.000000</td>\n      <td>7.311746e+03</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>52272.000000</td>\n      <td>40.000000</td>\n      <td>3600.000000</td>\n      <td>43.000000</td>\n      <td>1.200000e+07</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":64},{"cell_type":"code","source":"data['location'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.930989Z","iopub.execute_input":"2025-02-13T18:01:17.931189Z","iopub.status.idle":"2025-02-13T18:01:17.938276Z","shell.execute_reply.started":"2025-02-13T18:01:17.931172Z","shell.execute_reply":"2025-02-13T18:01:17.937479Z"}},"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"location\nWhitefield                        540\nSarjapur  Road                    399\nElectronic City                   302\nKanakpura Road                    273\nThanisandra                       234\n                                 ... \n1st Stage Radha Krishna Layout      1\nBEML Layout 5th stage               1\nsingapura paradise                  1\nUvce Layout                         1\nAbshot Layout                       1\nName: count, Length: 1306, dtype: int64"},"metadata":{}}],"execution_count":65},{"cell_type":"code","source":"data['location'] = data['location'].apply(lambda x: x.strip())\nlocation_count = data['location'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.941204Z","iopub.execute_input":"2025-02-13T18:01:17.941505Z","iopub.status.idle":"2025-02-13T18:01:17.956870Z","shell.execute_reply.started":"2025-02-13T18:01:17.941485Z","shell.execute_reply":"2025-02-13T18:01:17.956092Z"}},"outputs":[],"execution_count":66},{"cell_type":"code","source":"location_count_less_10 = location_count[location_count<10]\nlocation_count_less_10 ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.957899Z","iopub.execute_input":"2025-02-13T18:01:17.958086Z","iopub.status.idle":"2025-02-13T18:01:17.978159Z","shell.execute_reply.started":"2025-02-13T18:01:17.958069Z","shell.execute_reply":"2025-02-13T18:01:17.977012Z"}},"outputs":[{"execution_count":67,"output_type":"execute_result","data":{"text/plain":"location\nVolagerekallahalli                    9\nMedahalli                             9\nVishwanatha Nagenahalli               9\n2nd Phase JP Nagar                    9\nChennammana Kere                      9\n                                     ..\n1Channasandra                         1\nHosahalli                             1\nVijayabank bank layout                1\nnear Ramanashree California resort    1\nAbshot Layout                         1\nName: count, Length: 1041, dtype: int64"},"metadata":{}}],"execution_count":67},{"cell_type":"code","source":"data['location'] = data['location'].apply(lambda x: 'other' if x in location_count_less_10 else x)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:17.979087Z","iopub.execute_input":"2025-02-13T18:01:17.979373Z","iopub.status.idle":"2025-02-13T18:01:18.011918Z","shell.execute_reply.started":"2025-02-13T18:01:17.979353Z","shell.execute_reply":"2025-02-13T18:01:18.010761Z"}},"outputs":[],"execution_count":68},{"cell_type":"markdown","source":"> Outliers removel","metadata":{}},{"cell_type":"code","source":"print(data[['total_sqft', 'bhk']].isnull().sum())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:06:01.410148Z","iopub.execute_input":"2025-02-13T18:06:01.410459Z","iopub.status.idle":"2025-02-13T18:06:01.416411Z","shell.execute_reply.started":"2025-02-13T18:06:01.410435Z","shell.execute_reply":"2025-02-13T18:06:01.415523Z"}},"outputs":[{"name":"stdout","text":"total_sqft    0\nbhk           0\ndtype: int64\n","output_type":"stream"}],"execution_count":75},{"cell_type":"code","source":"data = data.dropna(subset=['total_sqft', 'bhk'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:06:53.654326Z","iopub.execute_input":"2025-02-13T18:06:53.654582Z","iopub.status.idle":"2025-02-13T18:06:53.659193Z","shell.execute_reply.started":"2025-02-13T18:06:53.654565Z","shell.execute_reply":"2025-02-13T18:06:53.658518Z"}},"outputs":[],"execution_count":77},{"cell_type":"code","source":"(data['total_sqft']/data['bhk']).describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:06:59.774106Z","iopub.execute_input":"2025-02-13T18:06:59.774392Z","iopub.status.idle":"2025-02-13T18:06:59.784415Z","shell.execute_reply.started":"2025-02-13T18:06:59.774370Z","shell.execute_reply":"2025-02-13T18:06:59.783856Z"}},"outputs":[{"execution_count":78,"output_type":"execute_result","data":{"text/plain":"count    10282.000000\nmean       584.315487\nstd        216.930997\nmin        300.000000\n25%        496.666667\n50%        562.500000\n75%        625.500000\nmax      10030.000000\ndtype: float64"},"metadata":{}}],"execution_count":78},{"cell_type":"code","source":"data = data[((data['total_sqft']/data['bhk']) >= 300)]\ndata.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:07:02.987341Z","iopub.execute_input":"2025-02-13T18:07:02.987595Z","iopub.status.idle":"2025-02-13T18:07:03.006129Z","shell.execute_reply.started":"2025-02-13T18:07:02.987577Z","shell.execute_reply":"2025-02-13T18:07:03.004239Z"}},"outputs":[{"execution_count":79,"output_type":"execute_result","data":{"text/plain":"         total_sqft          bath         price           bhk  price_per_sqft\ncount  10282.000000  10282.000000  10282.000000  10282.000000    10282.000000\nmean    1509.996956      2.474032     91.718675      2.576347     5669.007067\nstd      883.210082      0.986908     88.327858      0.900592     2292.794131\nmin      300.000000      1.000000     10.000000      1.000000     1250.000000\n25%     1110.000000      2.000000     49.000000      2.000000     4249.917219\n50%     1286.000000      2.000000     67.000000      2.000000     5176.565008\n75%     1650.000000      3.000000    100.000000      3.000000     6431.808627\nmax    30400.000000     16.000000   2200.000000     16.000000    24509.803922","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>price</th>\n      <th>bhk</th>\n      <th>price_per_sqft</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>10282.000000</td>\n      <td>10282.000000</td>\n      <td>10282.000000</td>\n      <td>10282.000000</td>\n      <td>10282.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1509.996956</td>\n      <td>2.474032</td>\n      <td>91.718675</td>\n      <td>2.576347</td>\n      <td>5669.007067</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>883.210082</td>\n      <td>0.986908</td>\n      <td>88.327858</td>\n      <td>0.900592</td>\n      <td>2292.794131</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>300.000000</td>\n      <td>1.000000</td>\n      <td>10.000000</td>\n      <td>1.000000</td>\n      <td>1250.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1110.000000</td>\n      <td>2.000000</td>\n      <td>49.000000</td>\n      <td>2.000000</td>\n      <td>4249.917219</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1286.000000</td>\n      <td>2.000000</td>\n      <td>67.000000</td>\n      <td>2.000000</td>\n      <td>5176.565008</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1650.000000</td>\n      <td>3.000000</td>\n      <td>100.000000</td>\n      <td>3.000000</td>\n      <td>6431.808627</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>30400.000000</td>\n      <td>16.000000</td>\n      <td>2200.000000</td>\n      <td>16.000000</td>\n      <td>24509.803922</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":79},{"cell_type":"code","source":"data.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:07:05.680915Z","iopub.execute_input":"2025-02-13T18:07:05.681175Z","iopub.status.idle":"2025-02-13T18:07:05.686269Z","shell.execute_reply.started":"2025-02-13T18:07:05.681156Z","shell.execute_reply":"2025-02-13T18:07:05.684952Z"}},"outputs":[{"execution_count":80,"output_type":"execute_result","data":{"text/plain":"(10282, 7)"},"metadata":{}}],"execution_count":80},{"cell_type":"code","source":"def remove_outliers_sqft(df):\n    df_output = pd.DataFrame()\n    for key,subdf in df.groupby('location'):\n        m = np.mean(subdf.price_per_sqft)\n        st = np.std(subdf.price_per_sqft)\n\n        gen_df = subdf[(subdf.price_per_sqft > (m-st)) & (subdf.price_per_sqft <= (m+st))]\n        df_output = pd.concat([df_output,gen_df],ignore_index = True)\n\n    return df_output\n\ndata = remove_outliers_sqft(data)\ndata.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:01:18.067747Z","iopub.execute_input":"2025-02-13T18:01:18.067994Z","iopub.status.idle":"2025-02-13T18:01:18.322567Z","shell.execute_reply.started":"2025-02-13T18:01:18.067976Z","shell.execute_reply":"2025-02-13T18:01:18.321639Z"}},"outputs":[{"execution_count":72,"output_type":"execute_result","data":{"text/plain":"         total_sqft          bath         price           bhk  price_per_sqft\ncount  10282.000000  10282.000000  10282.000000  10282.000000    10282.000000\nmean    1509.996956      2.474032     91.718675      2.576347     5669.007067\nstd      883.210082      0.986908     88.327858      0.900592     2292.794131\nmin      300.000000      1.000000     10.000000      1.000000     1250.000000\n25%     1110.000000      2.000000     49.000000      2.000000     4249.917219\n50%     1286.000000      2.000000     67.000000      2.000000     5176.565008\n75%     1650.000000      3.000000    100.000000      3.000000     6431.808627\nmax    30400.000000     16.000000   2200.000000     16.000000    24509.803922","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_sqft</th>\n      <th>bath</th>\n      <th>price</th>\n      <th>bhk</th>\n      <th>price_per_sqft</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>10282.000000</td>\n      <td>10282.000000</td>\n      <td>10282.000000</td>\n      <td>10282.000000</td>\n      <td>10282.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1509.996956</td>\n      <td>2.474032</td>\n      <td>91.718675</td>\n      <td>2.576347</td>\n      <td>5669.007067</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>883.210082</td>\n      <td>0.986908</td>\n      <td>88.327858</td>\n      <td>0.900592</td>\n      <td>2292.794131</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>300.000000</td>\n      <td>1.000000</td>\n      <td>10.000000</td>\n      <td>1.000000</td>\n      <td>1250.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1110.000000</td>\n      <td>2.000000</td>\n      <td>49.000000</td>\n      <td>2.000000</td>\n      <td>4249.917219</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1286.000000</td>\n      <td>2.000000</td>\n      <td>67.000000</td>\n      <td>2.000000</td>\n      <td>5176.565008</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1650.000000</td>\n      <td>3.000000</td>\n      <td>100.000000</td>\n      <td>3.000000</td>\n      <td>6431.808627</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>30400.000000</td>\n      <td>16.000000</td>\n      <td>2200.000000</td>\n      <td>16.000000</td>\n      <td>24509.803922</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":72},{"cell_type":"code","source":"def bhk_outliers_remover(df):\n    exclude_indices = np.array([])\n\n    for location, location_df in df.groupby('location'):\n        bhk_stats = {}\n        \n        # Collect BHK-wise stats for the location\n        for bhk, bhk_def in location_df.groupby('bhk'):\n            bhk_stats[bhk] = {\n                'mean': np.mean(bhk_def.price_per_sqft),\n                'std': np.std(bhk_def.price_per_sqft),\n                'count': bhk_def.shape[0]\n            }\n\n        # Remove outliers based on previous BHK stats\n        for bhk, bhk_def in location_df.groupby('bhk'):\n            stats = bhk_stats.get(bhk - 1)\n            if stats and stats['count'] > 5:\n                exclude_indices = np.append(\n                    exclude_indices, \n                    bhk_def[bhk_def.price_per_sqft < stats['mean']].index.values\n                )\n\n    return df.drop(index=exclude_indices)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:09:05.663537Z","iopub.execute_input":"2025-02-13T18:09:05.663782Z","iopub.status.idle":"2025-02-13T18:09:05.668496Z","shell.execute_reply.started":"2025-02-13T18:09:05.663766Z","shell.execute_reply":"2025-02-13T18:09:05.667624Z"}},"outputs":[],"execution_count":81},{"cell_type":"code","source":"data=bhk_outliers_remover(data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:09:09.561759Z","iopub.execute_input":"2025-02-13T18:09:09.562060Z","iopub.status.idle":"2025-02-13T18:09:09.891780Z","shell.execute_reply.started":"2025-02-13T18:09:09.562037Z","shell.execute_reply":"2025-02-13T18:09:09.891092Z"}},"outputs":[],"execution_count":82},{"cell_type":"code","source":"data.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:09:55.502322Z","iopub.execute_input":"2025-02-13T18:09:55.502567Z","iopub.status.idle":"2025-02-13T18:09:55.506477Z","shell.execute_reply.started":"2025-02-13T18:09:55.502548Z","shell.execute_reply":"2025-02-13T18:09:55.505855Z"}},"outputs":[{"execution_count":83,"output_type":"execute_result","data":{"text/plain":"(7402, 7)"},"metadata":{}}],"execution_count":83},{"cell_type":"code","source":"data.drop(columns=['size','price_per_sqft'],inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:11:09.322343Z","iopub.execute_input":"2025-02-13T18:11:09.322614Z","iopub.status.idle":"2025-02-13T18:11:09.327373Z","shell.execute_reply.started":"2025-02-13T18:11:09.322591Z","shell.execute_reply":"2025-02-13T18:11:09.326576Z"}},"outputs":[],"execution_count":85},{"cell_type":"code","source":"data.to_csv(\"Cleaned_data.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:12:03.440261Z","iopub.execute_input":"2025-02-13T18:12:03.440567Z","iopub.status.idle":"2025-02-13T18:12:03.470318Z","shell.execute_reply.started":"2025-02-13T18:12:03.440541Z","shell.execute_reply":"2025-02-13T18:12:03.469573Z"}},"outputs":[],"execution_count":86},{"cell_type":"markdown","source":"> Model Training","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Lasso, Ridge\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.metrics import r2_score","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:16:48.173882Z","iopub.execute_input":"2025-02-13T18:16:48.174210Z","iopub.status.idle":"2025-02-13T18:16:49.041150Z","shell.execute_reply.started":"2025-02-13T18:16:48.174183Z","shell.execute_reply":"2025-02-13T18:16:49.039820Z"}},"outputs":[],"execution_count":87},{"cell_type":"code","source":"# Separate features and target\nX = data.drop(columns=['price'])\ny = data['price']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:17:17.197839Z","iopub.execute_input":"2025-02-13T18:17:17.198273Z","iopub.status.idle":"2025-02-13T18:17:17.203250Z","shell.execute_reply.started":"2025-02-13T18:17:17.198247Z","shell.execute_reply":"2025-02-13T18:17:17.202389Z"}},"outputs":[],"execution_count":88},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:17:34.917831Z","iopub.execute_input":"2025-02-13T18:17:34.918151Z","iopub.status.idle":"2025-02-13T18:17:34.924979Z","shell.execute_reply.started":"2025-02-13T18:17:34.918126Z","shell.execute_reply":"2025-02-13T18:17:34.924159Z"}},"outputs":[],"execution_count":90},{"cell_type":"code","source":"# Define preprocessing for numerical and categorical features\ncolumn_trans = make_column_transformer(\n    (OneHotEncoder(handle_unknown='ignore'), ['location']),\n    (StandardScaler(), ['total_sqft', 'bath', 'bhk']),\n    remainder='passthrough'\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:17:44.198109Z","iopub.execute_input":"2025-02-13T18:17:44.198413Z","iopub.status.idle":"2025-02-13T18:17:44.202903Z","shell.execute_reply.started":"2025-02-13T18:17:44.198386Z","shell.execute_reply":"2025-02-13T18:17:44.201909Z"}},"outputs":[],"execution_count":91},{"cell_type":"code","source":"# Create pipeline\nlr_pipeline = make_pipeline(column_trans, LinearRegression())\n\n# Train the model\nlr_pipeline.fit(X_train, y_train)\n\n# Predict and evaluate\ny_pred_lr = lr_pipeline.predict(X_test)\nprint(\"Linear Regression R2 Score:\", r2_score(y_test, y_pred_lr))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:17:54.254058Z","iopub.execute_input":"2025-02-13T18:17:54.254346Z","iopub.status.idle":"2025-02-13T18:17:54.335193Z","shell.execute_reply.started":"2025-02-13T18:17:54.254322Z","shell.execute_reply":"2025-02-13T18:17:54.333960Z"}},"outputs":[{"name":"stdout","text":"Linear Regression R2 Score: 0.8366996618025215\n","output_type":"stream"}],"execution_count":92},{"cell_type":"code","source":"lasso_pipeline = make_pipeline(column_trans, Lasso(alpha=0.001))\n\nlasso_pipeline.fit(X_train, y_train)\ny_pred_lasso = lasso_pipeline.predict(X_test)\nprint(\"Lasso Regression R2 Score:\", r2_score(y_test, y_pred_lasso))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:18:22.189687Z","iopub.execute_input":"2025-02-13T18:18:22.190028Z","iopub.status.idle":"2025-02-13T18:18:22.971899Z","shell.execute_reply.started":"2025-02-13T18:18:22.190005Z","shell.execute_reply":"2025-02-13T18:18:22.970916Z"}},"outputs":[{"name":"stdout","text":"Lasso Regression R2 Score: 0.8369132899009075\n","output_type":"stream"}],"execution_count":93},{"cell_type":"code","source":"ridge_pipeline = make_pipeline(column_trans, Ridge(alpha=0.1))\n\nridge_pipeline.fit(X_train, y_train)\ny_pred_ridge = ridge_pipeline.predict(X_test)\nprint(\"Ridge Regression R2 Score:\", r2_score(y_test, y_pred_ridge))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:18:30.083159Z","iopub.execute_input":"2025-02-13T18:18:30.083498Z","iopub.status.idle":"2025-02-13T18:18:30.112041Z","shell.execute_reply.started":"2025-02-13T18:18:30.083472Z","shell.execute_reply":"2025-02-13T18:18:30.111309Z"}},"outputs":[{"name":"stdout","text":"Ridge Regression R2 Score: 0.8373096883287463\n","output_type":"stream"}],"execution_count":94},{"cell_type":"code","source":"print(\"Linear Regression R2:\", r2_score(y_test, y_pred_lr))\nprint(\"Lasso Regression R2:\", r2_score(y_test, y_pred_lasso))\nprint(\"Ridge Regression R2:\", r2_score(y_test, y_pred_ridge))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:18:37.974005Z","iopub.execute_input":"2025-02-13T18:18:37.974300Z","iopub.status.idle":"2025-02-13T18:18:37.980986Z","shell.execute_reply.started":"2025-02-13T18:18:37.974275Z","shell.execute_reply":"2025-02-13T18:18:37.980178Z"}},"outputs":[{"name":"stdout","text":"Linear Regression R2: 0.8366996618025215\nLasso Regression R2: 0.8369132899009075\nRidge Regression R2: 0.8373096883287463\n","output_type":"stream"}],"execution_count":95},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\nimport matplotlib.pyplot as plt","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:20:06.716477Z","iopub.execute_input":"2025-02-13T18:20:06.716831Z","iopub.status.idle":"2025-02-13T18:20:06.720887Z","shell.execute_reply.started":"2025-02-13T18:20:06.716771Z","shell.execute_reply":"2025-02-13T18:20:06.719870Z"}},"outputs":[],"execution_count":96},{"cell_type":"code","source":"lasso_pipeline = make_pipeline(\n    column_trans, \n    Lasso(alpha=0.001, max_iter=5000)  # Increased max_iter\n)\n\nlasso_params = {'lasso__alpha': [0.0001, 0.001, 0.01, 0.1, 1, 10],\n                'lasso__max_iter': [5000, 10000]}  # Add max_iter to GridSearch\n\nlasso_grid = GridSearchCV(lasso_pipeline, lasso_params, cv=5, scoring='r2', verbose=1)\nlasso_grid.fit(X_train, y_train)\n\nprint(\"Best Lasso Alpha:\", lasso_grid.best_params_['lasso__alpha'])\nprint(\"Best Lasso Max Iterations:\", lasso_grid.best_params_['lasso__max_iter'])\nprint(\"Best Lasso R2 Score:\", lasso_grid.best_score_)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:21:36.857062Z","iopub.execute_input":"2025-02-13T18:21:36.857373Z","iopub.status.idle":"2025-02-13T18:22:29.580756Z","shell.execute_reply.started":"2025-02-13T18:21:36.857346Z","shell.execute_reply":"2025-02-13T18:22:29.579881Z"}},"outputs":[{"name":"stdout","text":"Fitting 5 folds for each of 12 candidates, totalling 60 fits\nBest Lasso Alpha: 0.001\nBest Lasso Max Iterations: 5000\nBest Lasso R2 Score: 0.8446886124547527\n","output_type":"stream"}],"execution_count":98},{"cell_type":"code","source":"y_pred_lasso_best = lasso_grid.best_estimator_.predict(X_test)\n\nplt.figure(figsize=(8, 6))\nplt.scatter(y_test, y_pred_lasso_best, alpha=0.5, color='green')\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\"Lasso Regression: Actual vs Predicted Price\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-13T18:22:53.039670Z","iopub.execute_input":"2025-02-13T18:22:53.040207Z","iopub.status.idle":"2025-02-13T18:22:53.410936Z","shell.execute_reply.started":"2025-02-13T18:22:53.040164Z","shell.execute_reply":"2025-02-13T18:22:53.409199Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":"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+fOTzt9///34/PPPMWfOHAwdOhRNTU14+umnkZ+fj+nTp3+n1z6SP/7xj5g+fTrGjRuHK6+8EsOHD0djYyNWr16N2tpabN68GQBw66234m9/+xu+//3v44YbblBKjA0dOjRpzX5HLr74Yvz1r3/FjTfeiLVr12LGjBnw+/348MMP8fOf/xw/+MEPYDAYUFZWhn/9618YPXo0MjIyMHbsWIwdO/aYjLG3dOXeu/pvAVGX9U3xCaKBra00VGcfNTU1siRJ8sMPPywPHTpU1ul08gknnCC/88477UpDvfbaa/KZZ54pZ2VlyVqtVi4sLJSvvvpqub6+XrnmwQcflE866STZZrPJBoNBLikpkR966CE5EokkjevDDz+Up02bJhsMBtliscjnnnuuXF5efsT7aSsB9Zvf/KbD85dccomsUqnkXbt2ybIsy16vV77jjjvkkSNHylqtVrbb7fLJJ58s//a3v00ak9PplH/yk5/IaWlpstVqlS+55BJ51apVMgD5n//8p3LdokWLZJPJ1On4nnvuOXnixImywWCQ09LS5HHjxsm33nqrXFdXJ8uyLG/cuFG+8MIL5cLCQlmn08lZWVnyOeecI69fv75b7/OhZdDa/Otf/5JPOOEEWafTyRkZGfLChQvl2trapGs6u4eOyot1pQxaWxm5P//5z51e8+mnn8oA5CeffFI59pe//EUZa3p6unzKKafIK1euVM43NDTIc+bMkdPS0mQASeWoNmzYIE+ePFl5fx5//PEOy6CtWrVKnjJlimwwGOS8vDz51ltvld9///12711XyqAdbOHChTIAedasWe3OffTRR/IPfvADOS8vT9ZqtXJeXp584YUXtivH15GhQ4cesYzgkf4b2L17t3zxxRfLOTk5skajkYcMGSKfc8458muvvZZ03ZYtW+RTTjlF1uv18pAhQ+QHHnhA/vOf/3zEMmiynCgvd+edd8rDhg2TNRqNnJOTI19wwQXy7t27lWu++uoreeLEibJWq21XEq2nx9iRtq/nI5WjO+WUU+QxY8Z0eu5o7l2Wj/xvAVFXCbL8HX9sJyLqhhUrVmDevHn48ssvMW3atL4eDhERpSAGYCLqNcFgMGnDSjwex5lnnon169ejoaGBm1mIiKhPcA0wEfWa66+/HsFgEFOnTkU4HMYbb7yBr776Cg8//DDDLxER9RnOABNRr/n73/+O3/3ud9i1axdCoRBGjhyJa665JmnzHhER0bHGAExEREREKYV1gImIiIgopTAAExEREVFK4Sa4LpAkCXV1dUhLS+tS8X4iIiIiOrZkWYbX60VeXh5E8fBzvAzAXVBXV4eCgoK+HgYRERERHUFNTQ3y8/MPew0DcBekpaUBSLyhFoulj0dDRERERIfyeDwoKChQctvhMAB3QduyB4vFwgBMRERE1I91ZbkqN8ERERERUUphACYiIiKilMIATEREREQphQGYiIiIiFIKAzARERERpRQGYCIiIiJKKQzARERERJRSGICJiIiIKKUwABMRERFRSmEAJiIiIqKUwgBMRERERCmFAZiIiIiIUgoDMBERERGlFHVfD4CIiIiIBhdJllDtroY37EWaLg2F1kKIQv+Zd2UAJiIiIqIeU+GswPLK5ah0VSIUC0Gv1qPEXoJ5JfNQ6ijt6+EB6OMlEJ9//jnOPfdc5OXlQRAErFixIum8LMu4++67kZubC4PBgFmzZmHnzp1J1xw4cAALFy6ExWKBzWbD5ZdfDp/Pl3TNli1bMGPGDOj1ehQUFOCxxx7r7VsjIiIiSjkVzgosXbMUm+o3wW60ozizGHajHZvqN2HpmqWocFb09RAB9HEA9vv9OP744/HHP/6xw/OPPfYYli5dimXLlmHNmjUwmUyYPXs2QqGQcs3ChQuxbds2rFy5Eu+88w4+//xzXHXVVcp5j8eDM888E0OHDsWGDRvwm9/8Bvfeey+ee+65Xr8/IiIiolQhyRKWVy6HK+BCmaMMFp0FKlEFi86CMkcZXAEXVlSugCRLfT1UCLIsy309CAAQBAHLly/H3LlzASRmf/Py8nDTTTfh5ptvBgC43W5kZ2fjxRdfxIIFC1BRUYGysjKsW7cOkyZNAgC89957OPvss1FbW4u8vDw888wzuPPOO9HQ0ACtVgsAuP3227FixQpUVlZ2aWwejwdWqxVutxsWi6Xnb56IiIhogKtqrcLdn9wNu9EOi659XnKH3GgONuP+0+5Hka2ox1+/O3mt/6xGPsTevXvR0NCAWbNmKcesVismT56M1atXAwBWr14Nm82mhF8AmDVrFkRRxJo1a5RrZs6cqYRfAJg9eza2b9+OlpaWDl87HA7D4/EkfRARERFR57xhL0KxEEwaU4fnTVoTQrEQvGHvMR5Ze/02ADc0NAAAsrOzk45nZ2cr5xoaGpCVlZV0Xq1WIyMjI+majp7j4Nc41JIlS2C1WpWPgoKC735DRERERINYmi4NerUe/qi/w/P+iB96tR5purRjPLL2+m0A7kt33HEH3G638lFTU9PXQyIiIiLq1wqthSixl6DGXYNDV9jKsoxaTy1K7aUotBb20Qj/p98G4JycHABAY2Nj0vHGxkblXE5ODpqampLOx2IxHDhwIOmajp7j4Nc4lE6ng8ViSfogIiIios6Jgoh5JfNgN9pR7iyHO+RGTIrBHXKj3FkOu9GOuSVz+0U94L4fQSeGDRuGnJwcfPTRR8oxj8eDNWvWYOrUqQCAqVOnorW1FRs2bFCu+fjjjyFJEiZPnqxc8/nnnyMajSrXrFy5EsXFxUhPTz9Gd0NEREQ0+JU6SrF48mKckHsCmoPN2NG8A83BZkzInYDFkxf3mzrAfdoIw+fzYdeuXcrf9+7di2+++QYZGRkoLCzEL37xCzz44IMYNWoUhg0bhrvuugt5eXlKpYjS0lJ8//vfx5VXXolly5YhGo3iuuuuw4IFC5CXlwcA+MlPfoL77rsPl19+OW677TZ8++23ePLJJ/H73/++L26ZiIiIaFArdZSi2F7crzvB9WkZtE8//RSnnXZau+OLFi3Ciy++CFmWcc899+C5555Da2srpk+fjqeffhqjR49Wrj1w4ACuu+46vP322xBFEfPnz8fSpUthNpuVa7Zs2YJrr70W69atg91ux/XXX4/bbruty+NkGTQiIiKi/q07ea3f1AHuzxiAiYiIiPq3QVEHmIiIiIioNzAAExEREVFKYQAmIiIiopTCAExEREREKYUBmIiIiIhSCgMwEREREaUUBmAiIiIiSikMwERERESUUhiAiYiIiCilMAATERERUUphACYiIiKilMIATEREREQphQGYiIiIiFIKAzARERERpRQGYCIiIiJKKQzARERERJRSGICJiIiIKKUwABMRERFRSmEAJiIiIqKUwgBMRERERCmFAZiIiIiIUgoDMBERERGlFAZgIiIiIkopDMBERERElFIYgImIiIgopTAAExEREVFKYQAmIiIiopTCAExEREREKYUBmIiIiIhSCgMwEREREaUUBmAiIiIiSikMwERERESUUhiAiYiIiCilMAATERERUUphACYiIiKilMIATEREREQphQGYiIiIiFIKAzARERERpRQGYCIiIiJKKQzARERERJRSGICJiIiIKKUwABMRERFRSmEAJiIiIqKUwgBMRERERCmFAZiIiIiIUgoDMBERERGlFAZgIiIiIkopDMBERERElFIYgImIiIgopTAAExEREVFKYQAmIiIiopTCAExEREREKYUBmIiIiIhSCgMwEREREaUUBmAiIiIiSikMwERERESUUhiAiYiIiCilMAATERERUUphACYiIiKilMIATEREREQphQGYiIiIiFKKuq8HQERERIcnyRKq3dXwhr1I06Wh0FoIUeAcFtHRYgAmIiLqxyqcFVheuRyVrkqEYiHo1XqU2Eswr2QeSh2lfT08ogGJAZiIiKifqnBWYOmapXAFXCiwFsCkMcEf9WNT/SbUuGuwePJihmCio8DfnxAREfVDkixheeVyuAIulDnKYNFZoBJVsOgsKHOUwRVwYUXlCkiy1NdDJRpwGICJiIj6oWp3NSpdlSiwFkAQhKRzgiAg35KPClcFqt3VfTRCooGLAZiIiKgf8oa9CMVCMGlMHZ43aU0IxULwhr3HeGREAx8DMBERUT+UpkuDXq2HP+rv8Lw/4oderUeaLu0Yj4xo4GMAJiIi6ocKrYUosZegxl0DWZaTzsmyjFpPLUrtpSi0FvbRCIkGLgZgIiKifkgURMwrmQe70Y5yZzncITdiUgzukBvlznLYjXbMLZnLesBER4H/1RAREfVTpY5SLJ68GCfknoDmYDN2NO9Ac7AZE3InsAQa0XfQrwNwPB7HXXfdhWHDhsFgMGDEiBF44IEHkn4VJMsy7r77buTm5sJgMGDWrFnYuXNn0vMcOHAACxcuhMVigc1mw+WXXw6fz3esb4eIiKjbSh2luH367bj/tPtx18y7cP9p9+O26bcx/BJ9B/06AD/66KN45pln8NRTT6GiogKPPvooHnvsMfzhD39QrnnsscewdOlSLFu2DGvWrIHJZMLs2bMRCoWUaxYuXIht27Zh5cqVeOedd/D555/jqquu6otbIiIi6jZREFFkK8K47HEoshVx2QPRdyTIh66s70fOOeccZGdn489//rNybP78+TAYDHj55ZchyzLy8vJw00034eabbwYAuN1uZGdn48UXX8SCBQtQUVGBsrIyrFu3DpMmTQIAvPfeezj77LNRW1uLvLy8I47D4/HAarXC7XbDYrH0zs0SERER0VHrTl7r1z9Cnnzyyfjoo4+wY8cOAMDmzZvx5Zdf4qyzzgIA7N27Fw0NDZg1a5byGKvVismTJ2P16tUAgNWrV8NmsynhFwBmzZoFURSxZs2aDl83HA7D4/EkfRARERHR4KDu6wEczu233w6Px4OSkhKoVCrE43E89NBDWLhwIQCgoaEBAJCdnZ30uOzsbOVcQ0MDsrKyks6r1WpkZGQo1xxqyZIluO+++3r6doiIiIioH+jXM8D//ve/8corr+Dvf/87Nm7ciJdeegm//e1v8dJLL/Xq695xxx1wu93KR01NTa++HhEREREdO/16BviWW27B7bffjgULFgAAxo0bh3379mHJkiVYtGgRcnJyAACNjY3Izc1VHtfY2Ijx48cDAHJyctDU1JT0vLFYDAcOHFAefyidTgedTtcLd0REREREfa1fzwAHAgGIYvIQVSoVJEkCAAwbNgw5OTn46KOPlPMejwdr1qzB1KlTAQBTp05Fa2srNmzYoFzz8ccfQ5IkTJ48+RjcBRERERH1J/16Bvjcc8/FQw89hMLCQowZMwabNm3C448/jssuuwwAIAgCfvGLX+DBBx/EqFGjMGzYMNx1113Iy8vD3LlzAQClpaX4/ve/jyuvvBLLli1DNBrFddddhwULFnSpAgQRERERDS79OgD/4Q9/wF133YWf//znaGpqQl5eHq6++mrcfffdyjW33nor/H4/rrrqKrS2tmL69Ol47733oNfrlWteeeUVXHfddTjjjDMgiiLmz5+PpUuX9sUtEREREVEf69d1gPsL1gEmIiIi6t8GTR1gIiIiIqKexgBMRERERCmFAZiIiIiIUgoDMBERERGlFAZgIiIiIkopDMBERERElFIYgImIiIgopTAAExEREVFKYQAmIiIiopTCAExEREREKYUBmIiIiIhSCgMwEREREaUUBmAiIiIiSikMwERERESUUhiAiYiIiCilMAATERERUUphACYiIiKilMIATEREREQphQGYiIiIiFIKAzARERERpRQGYCIiIiJKKQzARERERJRSGICJiIiIKKUwABMRERFRSmEAJiIiIqKUwgBMRERERCmFAZiIiIiIUgoDMBERERGlFAZgIiIiIkopDMBERERElFIYgImIiIgopTAAExEREVFKYQAmIiIiopTCAExEREREKYUBmIiIiIhSCgMwEREREaUUBmAiIiIiSikM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\n"},"metadata":{}}],"execution_count":99},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}